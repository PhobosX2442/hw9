plugins {
    id 'java'
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
    id 'maven-publish'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

dependencies {
    implementation platform('org.jdbi:jdbi3-bom:3.20.0') //Jdbi
    implementation 'org.jdbi:jdbi3-core' //Jdbi
    implementation 'org.jdbi:jdbi3-sqlobject' //Jdbi
    implementation 'org.jdbi:jdbi3-jackson2' //Jdbi
    implementation 'org.jdbi:jdbi3-postgres' //Jdbi
    testImplementation platform('org.junit:junit-bom:5.13.4') //Junit
    api 'org.junit.jupiter:junit-jupiter-api:5.13.4' //Junit
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine' //Junit
    testImplementation 'org.assertj:assertj-core:3.27.3' //AssertJ
    testImplementation 'io.qameta.allure:allure-junit5:2.29.1' //allure
    implementation 'io.qameta.allure:allure-assertj:2.29.1' //allure
    implementation 'org.postgresql:postgresql:42.7.2' //Jdbi(Postgres)
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.19.2' //Jdbi(Jackson)
    compileOnly "org.projectlombok:lombok:1.18.32" //Lombok
    annotationProcessor "org.projectlombok:lombok:1.18.32" //Lombok
    api  'com.fasterxml.jackson.core:jackson-databind:2.17.1' //Jackson
    api  'io.rest-assured:rest-assured:5.5.5' //Rest-Assured
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.13.4' //Junit
}

test {
    useJUnitPlatform() {
        if (project.hasProperty("tags")) {
            includeTags(project.property("tags") as String)
        }
    //Parallel tests
    systemProperties += [
            'junit.jupiter.execution.parallel.enabled'                 : true,
            'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
            'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
            'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
            'junit.jupiter.execution.parallel.config.fixed.parallelism': '5'
    ]
    
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}
